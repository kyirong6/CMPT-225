Recursion & The Call Stack
--------------------------
S(n) {
	if (n=0) {
		r = 0
	else {
		r = n + S(n-1)
	}
	return r;
}

Computing S(3)
--------------
Call S(3)-\
	m = 3
	r = ? ->  Call S(2 m), m = 2, r? -> S(1) R=1, r=? -> Call S(0) n=0 r=0
    r = 6		<-			r = 3				  r = 1       <- r = 0


Sum(L) {
	if L.empty
		return 0;
	else 
		return L.first + Sum(L.rest);
}

Max(L){
	if L.rest().empty()
		return L.first
	else
		return max(L.first, Max(L.rest()))
}								

fib(n) {
	if n == 0 
		return 0
	if n == 1
		return 1
	else 
		return fib(n-1) + fib(n-2)
}


Fib(n) = { 0 if n=0
		 { 1 if n=1
		 { fib(n-1) + fib(n-2)
